{"version":3,"sources":["../../src/pages/forgot-password/forgot-password.module.ts","../../src/pages/forgot-password/forgot-password.ts"],"names":[],"mappings":"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","file":"25.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { ForgotPasswordPage } from './forgot-password';\n\n@NgModule({\n  declarations: [\n    ForgotPasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ForgotPasswordPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    ForgotPasswordPage\n  ]\n})\nexport class ForgotPasswordPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/forgot-password/forgot-password.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, ToastController } from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Database } from '../../providers';\nimport { Utils } from '../../utils/utils';\n\n@IonicPage()\n@Component({\n  selector: 'page-forgot-password',\n  templateUrl: 'forgot-password.html'\n})\nexport class ForgotPasswordPage {\n\n  emailForm: FormGroup;\n  codeForm: FormGroup;\n  passwordForm: FormGroup;\n  isReadyToSave: boolean;\n  user;\n  msg;\n  codeConfirmed;\n\n  constructor(public navCtrl: NavController,\n    public database: Database,\n    public toastCtrl: ToastController,\n    public formBuilder: FormBuilder,\n    public utils: Utils) {\n\n    this.emailForm = formBuilder.group({\n      email: ['', Validators.required],\n    });\n    this.codeForm = formBuilder.group({\n      email: ['', Validators.required],\n      passwordCode: ['', Validators.required],\n    });\n    this.passwordForm = formBuilder.group({\n      email: ['', Validators.required],\n      passwordCode: ['', Validators.required],\n      password: ['', Validators.required],\n      passwordConfirmation: ['', Validators.required]\n    });\n\n    this.passwordForm.valueChanges.subscribe((v) => {\n      this.isReadyToSave = this.passwordForm.valid;\n    });\n\n    this.isReadyToSave = this.passwordForm.valid;\n  }\n\n  forgotPassword() {\n    this.database.forgotPassword(this.emailForm.value).then((user) => {\n      if (user) {\n        this.codeForm.controls.email.setValue(this.emailForm.controls.email.value);\n        this.msg = \"Um código de 4 dígitos foi enviado para: \"+this.emailForm.controls.email.value+\". Insira o código abaixo para continuar:\"\n      } else {\n        this.utils.showToast(\"Usuário não encontrado\", \"error\")\n      }\n    }).catch(e => {\n      if (e.status == 422) {\n        this.utils.showToast(\"Usuário não encontrado\", \"error\")\n      } else {\n        this.utils.showToast(e.message, \"error\")\n      }\n    })\n  }\n\n  validateCode() {\n    this.database.validateCode(this.codeForm.value).then((isValid) => {\n      if (isValid) {\n        this.passwordForm.controls.email.setValue(this.codeForm.controls.email.value);\n        this.passwordForm.controls.passwordCode.setValue(this.codeForm.controls.passwordCode.value);\n        this.codeConfirmed = true\n      } else {\n        this.utils.showToast(\"Código inválido\", \"error\")\n      }\n    }).catch(e => {\n      this.utils.showToast(\"Não foi possível validar o código. Tente novamente mais tarde\", \"error\")\n    })\n  }\n  updatePassword() {\n    var password = this.passwordForm.controls.password.value\n    var passwordConfirmation = this.passwordForm.controls.passwordConfirmation.value\n    if (passwordConfirmation && passwordConfirmation == password) {\n\n      this.database.updatePassword(this.passwordForm.value).then((isValid) => {\n        if (isValid) {\n          this.utils.showToast(\"Sua senha foi alterada com sucesso!\", \"success\")\n          this.database.login(this.passwordForm.value).then((user) => {\n            if (user) {\n              if (user.profileCompleted) {\n                this.navCtrl.setRoot(\"HomePage\");\n              } else {\n                this.navCtrl.setRoot('ProfileEditPage');\n              }\n            }\n          })\n        }\n      }).catch(e => {\n        this.utils.showToast(\"Não foi possível validar o código. Tente novamente mais tarde\", \"error\")\n      })\n\n    } else {\n      this.utils.showToast(\"As senhas digitadas são diferentes\", \"error\")\n    }\n  }\n\n  back() {\n    this.navCtrl.push('LoginPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/forgot-password/forgot-password.ts"],"sourceRoot":""}